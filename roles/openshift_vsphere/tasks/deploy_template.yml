- name: Create cluster folder {{ vsphere.datacenter_name }}/{{ vsphere.target_folder }}
  vcenter_folder:
    hostname: "{{ vsphere.vcenter_hostname }}"
    username: "{{ vsphere.vcenter_username }}"
    password: "{{ vsphere.vcenter_password }}"
    datacenter: "{{ vsphere.datacenter_name }}"
    folder_name: "{{ vsphere.target_folder }}"
    folder_type: vm
    validate_certs: "{{ vsphere.validate_certs }}"
    state: present

- name: Upload Red Hat CoreOS OVA template to {{ vsphere.datacenter_name }}/{{ vsphere.target_folder }}/{{ vsphere.template_name }}
  vmware_deploy_ovf:
    hostname: "{{ vsphere.vcenter_hostname }}"
    username: "{{ vsphere.vcenter_username }}"
    password: "{{ vsphere.vcenter_password }}"
    datacenter: "{{ vsphere.datacenter_name }}"
    cluster: "{{ vsphere.cluster_name }}"
    datastore: "{{ vsphere.datastore_name }}"
    folder: "/{{ vsphere.datacenter_name }}/vm/{{ vsphere.target_folder }}"
    name: "{{ vsphere.template_name }}"
    allow_duplicates: false
    disk_provisioning: thin
    networks: '{"VM Network": "{{ vsphere.network_name }}"}'
    ova: "{{ vsphere_image_filename }}"
    power_on: false
    validate_certs: "{{ vsphere.validate_certs }}"

- name: Gather network info about the {{ vsphere.template_name }} template
  vmware_guest_network:
    hostname: "{{ vsphere.vcenter_hostname }}"
    username: "{{ vsphere.vcenter_username }}"
    password: "{{ vsphere.vcenter_password }}"
    datacenter: "{{ vsphere.datacenter_name }}"
    cluster: "{{ vsphere.cluster_name }}"
    name: "{{ vsphere.template_name }}"
    gather_network_info: true
    validate_certs: "{{ vsphere.validate_certs }}"
  register: template_network_info

- name: Remove the network interface from the {{ vsphere.template_name }} template
  vmware_guest_network:
    hostname: "{{ vsphere.vcenter_hostname }}"
    username: "{{ vsphere.vcenter_username }}"
    password: "{{ vsphere.vcenter_password }}"
    datacenter: "{{ vsphere.datacenter_name }}"
    cluster: "{{ vsphere.cluster_name }}"
    name: "{{ vsphere.template_name }}"
    mac_address: '{{ template_network_info.network_data["0"].mac_address }}'
    state: absent
    validate_certs: "{{ vsphere.validate_certs }}"
  when: template_network_info.network_data["0"] is defined and template_network_info.network_data["0"].mac_address is defined
